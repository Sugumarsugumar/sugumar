import pandas
dataset = pandas.read_csv("House Price India.csv")
dataset
id	Date	number of bedrooms	number of bathrooms	living area	lot area	number of floors	waterfront present	number of views	condition of the house	...	Built Year	Renovation Year	Postal Code	Lattitude	Longitude	living_area_renov	lot_area_renov	Number of schools nearby	Distance from the airport	Price
0	6762810145	42491	5	2.50	3650	9050	2.0	0	4	5	...	1921	0	122003	52.8645	-114.557	2880	5400	2	58	2380000
1	6762810635	42491	4	2.50	2920	4000	1.5	0	0	5	...	1909	0	122004	52.8878	-114.470	2470	4000	2	51	1400000
2	6762810998	42491	5	2.75	2910	9480	1.5	0	0	3	...	1939	0	122004	52.8852	-114.468	2940	6600	1	53	1200000
3	6762812605	42491	4	2.50	3310	42998	2.0	0	0	3	...	2001	0	122005	52.9532	-114.321	3350	42847	3	76	838000
4	6762812919	42491	3	2.00	2710	4500	1.5	0	0	4	...	1929	0	122006	52.9047	-114.485	2060	4500	1	51	805000
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
14615	6762830250	42734	2	1.50	1556	20000	1.0	0	0	4	...	1957	0	122066	52.6191	-114.472	2250	17286	3	76	221700
14616	6762830339	42734	3	2.00	1680	7000	1.5	0	0	4	...	1968	0	122072	52.5075	-114.393	1540	7480	3	59	219200
14617	6762830618	42734	2	1.00	1070	6120	1.0	0	0	3	...	1962	0	122056	52.7289	-114.507	1130	6120	2	64	209000
14618	6762830709	42734	4	1.00	1030	6621	1.0	0	0	4	...	1955	0	122042	52.7157	-114.411	1420	6631	3	54	205000
14619	6762831463	42734	3	1.00	900	4770	1.0	0	0	3	...	1969	2009	122018	52.5338	-114.552	900	3480	2	55	146000
14620 rows Ã— 23 columns

dataset.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 14620 entries, 0 to 14619
Data columns (total 23 columns):
 #   Column                                 Non-Null Count  Dtype  
---  ------                                 --------------  -----  
 0   id                                     14620 non-null  int64  
 1   Date                                   14620 non-null  int64  
 2   number of bedrooms                     14620 non-null  int64  
 3   number of bathrooms                    14620 non-null  float64
 4   living area                            14620 non-null  int64  
 5   lot area                               14620 non-null  int64  
 6   number of floors                       14620 non-null  float64
 7   waterfront present                     14620 non-null  int64  
 8   number of views                        14620 non-null  int64  
 9   condition of the house                 14620 non-null  int64  
 10  grade of the house                     14620 non-null  int64  
 11  Area of the house(excluding basement)  14620 non-null  int64  
 12  Area of the basement                   14620 non-null  int64  
 13  Built Year                             14620 non-null  int64  
 14  Renovation Year                        14620 non-null  int64  
 15  Postal Code                            14620 non-null  int64  
 16  Lattitude                              14620 non-null  float64
 17  Longitude                              14620 non-null  float64
 18  living_area_renov                      14620 non-null  int64  
 19  lot_area_renov                         14620 non-null  int64  
 20  Number of schools nearby               14620 non-null  int64  
 21  Distance from the airport              14620 non-null  int64  
 22  Price                                  14620 non-null  int64  
dtypes: float64(4), int64(19)
memory usage: 2.6 MB
average = dataset['Price'].mean()
print(average)

med = dataset['Price'].median()
print(med)
538932.2183310534
450000.0
standard_deviation = dataset['Price'].std()
print(standard_deviation)
367532.38080396695
import matplotlib.pyplot as plt
import seaborn as sns

%matplotlib inline

sns.set(style="whitegrid")
plt.figure(figsize=(10,8))
ax = sns.boxplot(x='Price', data=dataset, orient="v")
C:\Users\rajes\AppData\Local\Programs\Python\Python311\Lib\site-packages\seaborn\_oldcore.py:1599: UserWarning: Vertical orientation ignored with only `x` specified.
  warnings.warn(single_var_warning.format("Vertical", "x"))

plt.figure(figsize=(12,10))
ax = sns.boxplot(x='number of floors', y='Price', data=dataset, orient="v")

filter_data = dataset.dropna(subset=['Price'])
plt.figure(figsize=(10,8))
sns.displot(filter_data['Price'], kde=False)
<seaborn.axisgrid.FacetGrid at 0x12c88b347d0>
<Figure size 1000x800 with 0 Axes>

dataset['number of floors'].unique()
array([2. , 1.5, 1. , 2.5, 3. , 3.5])
type_counts = dataset['number of floors'].value_counts()
df2 = pandas.DataFrame(
                    {'house_number of floors': type_counts}, 
                   index = [2. , 1.5, 1. , 2.5, 3. , 3.5]
                  )
df2.plot.pie(y='house_number of floors', figsize=(10,10), autopct='%1.1f%%')
<Axes: ylabel='house_number of floors'>

sns.set(style='darkgrid')
plt.figure(figsize=(20,10))
ax = sns.countplot(x='Distance from the airport', data=dataset)

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
import math
dataset [['number of bedrooms','number of bathrooms','living area', 'lot area', 'number of floors','grade of the house','Built Year', 'Postal Code','Distance from the airport','Price']].describe()
